{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "melos.yaml",
  "description": "The workspace configuration file for Melos",
  "type": "object",
  "required": ["name", "packages"],
  "additionalProperties": false,
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the Melos workspace â€“ used by IDE documentation."
    },
    "repository": {
      "type": "string",
      "description": "The hosted git repository which contains the workspace."
    },
    "packages": {
      "type": "array",
      "description": "Patterns for packages that are included in the melos workspace.",
      "items": { "type": "string" }
    },
    "ignore": {
      "type": "array",
      "description": "Patterns for packages to exclude from the melos workspace.",
      "items": { "type": "string" }
    },
    "sdkPath": {
      "type": "string",
      "description": "Path to the Dart/Flutter SDK that should be used."
    },
    "ide": {
      "type": "object",
      "description": "IDE-specific configurations.\n\nThis allows connecting the different scripts to the IDE or tells melos to generate the necessary files for mono-repositories to work in the IDE.",
      "additionalProperties": false,
      "properties": {
        "intellij": {
          "description": "IntelliJ-specific configurations.",
          "anyOf": [
            {
              "type": "boolean",
              "description": "Whether IntelliJ support is enabled."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether IntelliJ support is enabled."
                },
                "moduleNamePrefix": {
                  "type": "string",
                  "description": "Used when generating IntelliJ project modules files, this value specifies a string to prepend to a package's IntelliJ module name.\n\nThe default is 'melos_'."
                }
              }
            }
          ]
        }
      }
    },
    "command": {
      "type": "object",
      "description": "Command-specific configurations.\n\nThis allows customizing the default behavior of melos commands.",
      "additionalProperties": false,
      "properties": {
        "bootstrap": {
          "type": "object",
          "description": "The bootstrap command configuration.",
          "additionalProperties": false,
          "properties": {
            "usePubspecOverrides": {
              "type": "boolean",
              "description": "Whether to use `pubspec_overrides.yaml` for overriding workspace dependencies during development."
            },
            "runPubGetInParallel": {
              "type": "boolean",
              "description": "Whether to run `pub get` in parallel during bootstrapping."
            }
          }
        },
        "version": {
          "type": "object",
          "description": "The version command configuration.",
          "additionalProperties": false,
          "properties": {
            "message": {
              "type": "string",
              "description": "A custom header for the generated CHANGELOG.md."
            },
            "linkToCommits": {
              "type": "boolean",
              "description": "Whether to add links to commits in the generated CHANGELOG.md.\n\nDisabled by default."
            },
            "workspaceChangelog": {
              "type": "boolean",
              "description": "Whether to additionally generate a summary CHANGELOG.md at the root of the workspace."
            },
            "branch": {
              "type": "string",
              "description": "If specified, prevents `melos version` from being used inside branches other than the one specified."
            },
            "updateGitTagRefs": {
              "type": "boolean",
              "description": "Whether to also update pubspec with git referenced packages."
            },
            "releaseUrl": {
              "type": "boolean",
              "description": "Whether to generate and print a link to the prefilled release creation page for each package after versioning.\n\nDisabled by default."
            }
          }
        }
      }
    },
    "scripts": {
      "type": "object",
      "description": "A list of scripts that can be executed with `melos run` or will be executed before/after some specific melos commands.",
      "additionalProperties": {
        "anyOf": [
          { "type": "string", "description": "The command to execute." },
          {
            "allOf": [
              {
                "anyOf": [
                  {
                    "type": "object",
                    "required": ["run"],
                    "properties": { "run": { "type": "string" } }
                  },
                  {
                    "type": "object",
                    "required": ["exec"],
                    "properties": { "exec": { "type": "string" } }
                  },
                  {
                    "type": "object",
                    "required": ["exec", "run"],
                    "properties": { "exec": { "type": "object" } }
                  }
                ]
              },
              {
                "type": "object",
                "description": "The script definition.",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A unique identifier for the script."
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description, shown when using `melos run` with no argument."
                  },
                  "run": {
                    "type": "string",
                    "description": "The command to execute."
                  },
                  "exec": {
                    "anyOf": [
                      {
                        "type": "string",
                        "description": "The command to execute in multiple packages."
                      },
                      {
                        "type": "object",
                        "description": "The options to pass to `exec`.",
                        "properties": {
                          "concurrency": {
                            "type": "number",
                            "description": "The number of packages to execute the command in concurrently."
                          },
                          "failFast": {
                            "type": "boolean",
                            "description": "Whether exec should fail fast and not execute the script in further packages if the script fails in a individual package."
                          }
                        }
                      }
                    ]
                  },
                  "env": {
                    "type": "object",
                    "description": "Environment variables that will be passed to the command to execute.",
                    "additionalProperties": {
                      "anyOf": [
                        { "type": "string" },
                        { "type": "number" },
                        { "type": "integer" },
                        { "type": "boolean" },
                        { "type": "null" }
                      ],
                      "description": "The value of the environment variable."
                    }
                  },
                  "select-package": {
                    "type": "object",
                    "description": "If the command to execute is a melos command, allows filtering packages that will execute the command.",
                    "additionalProperties": false,
                    "properties": {
                      "scope": {
                        "description": "Patterns for including packages by name.",
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        ]
                      },
                      "ignore": {
                        "description": "Patterns for excluding packages by name.",
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        ]
                      },
                      "dir-exists": {
                        "description": "Include a package only if a given directory exists.",
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        ]
                      },
                      "file-exists": {
                        "description": "Include a package only if a given file exists.",
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        ]
                      },
                      "depends-on": {
                        "description": "Include only packages that depend on a specific package.",
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        ]
                      },
                      "no-depends-on": {
                        "description": "Include only packages that do not depend on a specific package.",
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        ]
                      },
                      "since": {
                        "type": "string",
                        "description": "Filter package based on whether they received changed since a specific git commit/tag ID."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Include packages with `publish_to: none`."
                      },
                      "no-private": {
                        "type": "boolean",
                        "description": "Exclude packages with `publish_to: none`."
                      },
                      "published": {
                        "type": "boolean",
                        "description": "Include/Exclude packages that are up-to-date on pub.dev."
                      },
                      "null-safety": {
                        "type": "boolean",
                        "description": "Include/Exclude packages that are null-safe."
                      },
                      "flutter": {
                        "type": "boolean",
                        "description": "Include/Exclude packages that are Flutter packages."
                      }
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    }
  }
}
